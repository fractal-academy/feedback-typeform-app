import React, { useEffect, useState } from 'react'
import { useAnswersContextDispatch } from 'feedback-typeform-app/src/context/Answers'
import useFunctions from 'feedback-typeform-app/src/hooks/useFunctions'
import { COLLECTIONS } from 'feedback-typeform-app/src/constants'
import { useCollectionData } from 'react-firebase-hooks/firestore'
import { Box, Col } from '@qonsoll/react-design'
import moment from 'moment'
import { NumberedCard } from 'feedback-typeform-app/src/components'
import { EmptyState } from 'feedback-typeform-app/src/domains/Form/components/FormConditionsForm/FormConditionsForm.styles'

// import PropTypes from 'prop-types'
// import { useTranslation } from 'react-i18next'

/*
  [AUTOGENERATED]
  Please remove this section, if you are going to make changes
  in this file.
*/

function ResponseList(props) {
  const { formId } = props
  // const { ADDITIONAL_DESTRUCTURING_HERE } = user

  // [ADDITIONAL HOOKS]
  // const { t } = useTranslation('translation')
  // const { currentLanguage } = t

  // [CUSTOM HOOKS]
  const { getCollectionRef } = useFunctions()
  const answersDispatch = useAnswersContextDispatch()

  // [COMPONENT STATE HOOKS]
  // const [state, setState] = useState({})

  // [COMPUTED PROPERTIES]

  // [CLEAN FUNCTIONS]
  const [userAnswerGroup, loadingUserAnswerGroup] = useCollectionData(
    getCollectionRef(COLLECTIONS.USER_ANSWERS_GROUP).where(
      'formId',
      '==',
      formId
    )
  )

  // [USE_EFFECTS]
  useEffect(() => {
    let isComponentMounted = true

    // [EFFECT LOGIC]
    // write code here...
    // code sample: isComponentMounted && setState(<your data for state updation>)

    // [CLEAN UP FUNCTION]
    return () => {
      // [OTHER CLEAN UP-S (UNSUBSCRIPTIONS)]
      // write code here...

      // [FINAL CLEAN UP]
      isComponentMounted = false
    }
  }, [])

  console.log(userAnswerGroup)

  return (
    <>
      {userAnswerGroup?.length > 0 ? (
        userAnswerGroup?.map((item, index) => (
          <Col cw={5} key={index} my={2}>
            <NumberedCard number={index + 1}>
              <Box ml={3} my={2}>
                {item.date}, {item.user}'s response
              </Box>
              {/*{moment(item.date).format('MMMM Do YYYY, h:mm:ss a')}*/}
            </NumberedCard>
          </Col>
        ))
      ) : (
        <EmptyState />
      )}
    </>
  )
}

ResponseList.propTypes = {}

export default ResponseList
