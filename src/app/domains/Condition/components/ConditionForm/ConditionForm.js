import React, { cloneElement, useEffect, useState } from 'react'
import { Box, Col, Row } from '@qonsoll/react-design'
import { Button, Card, Input, Select } from 'antd'
import Text from 'antd/lib/typography/Text'
import Search from 'antd/es/input/Search'
import { SearchOutlined } from '@ant-design/icons'
import { QUESTION_TYPE, QUESTION_TYPE_VALUE } from 'app/constants/quetstionType'
import { ANSWER_TYPE } from 'app/constants/answerType'
import ChoiceTemplate from 'domains/Condition/components/ConditionForm/ConditionTemplates/ChoiceTemplate'
// import { ConditionRuleSelect } from 'domains/Condition/components'
// import PropTypes from 'prop-types'
// import { useTranslation } from 'react-i18next'

export const mockQuestion = {
  questions: [
    {
      name: 'Yes/no question example',
      orderNumber: '1. ',
      questionType: QUESTION_TYPE.YES_NO,
      answerType: ANSWER_TYPE.CHOICE,
      answers: ['Yes', 'No']
    },
    {
      name: 'Picture choice question example',
      orderNumber: '2. ',
      questionType: QUESTION_TYPE.PICTURE_CHOICE,
      answerType: ANSWER_TYPE.CHOICE,
      answers: ['Picture 1', 'Picture 2', 'Picture 3']
    },
    {
      name: 'Opinion scale question example',
      orderNumber: '3. ',
      questionType: QUESTION_TYPE.PICTURE_CHOICE,
      answerType: ANSWER_TYPE.CHOICE,
      answers: ['1', '2', '3']
    },
    {
      name: 'Rating question example',
      orderNumber: '4. ',
      questionType: QUESTION_TYPE.RATING,
      answerType: ANSWER_TYPE.CHOICE,
      answers: ['1', '2', '3']
    }
  ]
}

const questionTypesMap = {
  [QUESTION_TYPE.YES_NO]: {
    component: <ChoiceTemplate />
  },
  [QUESTION_TYPE.PICTURE_CHOICE]: {
    component: <ChoiceTemplate />
  },
  [QUESTION_TYPE.OPINION_SCALE]: {
    component: <ChoiceTemplate />
  },
  [QUESTION_TYPE.RATING]: {
    component: <ChoiceTemplate />
  }
}

function ConditionForm(props) {
  const { onChange, conditionType } = props

  return (
    <Row h="center" noGutters>
      <Col>
        {mockQuestion.questions.map((item, index) => (
          <>
            <Text strong>{item.orderNumber}</Text>
            <Text strong>{item.name}</Text>
            {cloneElement(questionTypesMap[item.questionType].component, {
              ...item
            })}
          </>
        ))}
      </Col>
    </Row>
  )
}
ConditionForm.propTypes = {}
export default ConditionForm

// import React, { useEffect, useState } from 'react'
// import { Col, Row } from '@qonsoll/react-design'
// import { Card, Input } from 'antd'
// import Text from 'antd/lib/typography/Text'
// import { ConditionRuleSelect } from 'domains/Condition/components'
// // import PropTypes from 'prop-types'
// // import { useTranslation } from 'react-i18next'
//
// /*
//   [AUTOGENERATED]
//   Please remove this section, if you are going to make changes
//   in this file.
// */
//
// function ConditionForm(props) {
//   const { choosable } = props
//   // const { WRITE_PROPS_HERE } = props
//   // const { ADDITIONAL_DESTRUCTURING_HERE } = user
//
//   // [ADDITIONAL HOOKS]
//   // const { t } = useTranslation('translation')
//   // const { currentLanguage } = t
//
//   // [COMPONENT STATE HOOKS]
//   // const [state, setState] = useState({})
//
//   // [COMPUTED PROPERTIES]
//
//   // [CLEAN FUNCTIONS]
//
//   // [USE_EFFECTS]
//   useEffect(() => {
//     let isComponentMounted = true
//
//     // [EFFECT LOGIC]
//     // write code here...
//     // code sample: isComponentMounted && setState(<your data for state updation>)
//
//     // [CLEAN UP FUNCTION]
//     return () => {
//       // [OTHER CLEAN UP-S (UNSUBSCRIPTIONS)]
//       // write code here...
//
//       // [FINAL CLEAN UP]
//       isComponentMounted = false
//     }
//   }, [])
//
//   return (
//     <Row h="center" noGutters>
//       <Col>
//         <Card>
//           <Row>
//             <Col cw="auto">
//               <Text>Question Number</Text>
//             </Col>
//             <Col>
//               <Text>Question Text</Text>
//             </Col>
//           </Row>
//           <Row>
//             <Col cw="auto" mr={1}>
//               {!choosable && <ConditionRuleSelect /*conditionType="date"*/ />}
//             </Col>
//             <Col mr={1}>
//               {choosable ? <Text>Choosable option</Text> : <Input />}
//             </Col>
//             <Col cw="auto">
//               <ConditionRuleSelect />
//             </Col>
//           </Row>
//         </Card>
//       </Col>
//     </Row>
//   )
// }
//
// ConditionForm.propTypes = {}
//
// export default ConditionForm
